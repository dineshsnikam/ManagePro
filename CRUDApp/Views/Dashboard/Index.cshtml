@{
    ViewData["Title"] = "POS Dashboard";
}
<!-- Chart.js CDN -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<!-- SignalR CDN -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>

<!--Hover & Animation Effects -->
<style>
    body{
        margin: 0px;
        padding: 0px;
        position:center;
    }
    .card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        cursor: pointer;
    }

        .card:hover {
            transform: translateY(-8px) scale(1.02);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
        }

    .card-body h2 {
        transition: transform 0.3s ease;
      
        
        <figcaption>text</figcaption>        
   </figure>
    }

    .card:hover .card-body h2 {
        transform: scale(1.1);
    }
</style>

<div class="container mt-4">
    <h2 class="text-center mb-4">⚙️ ManagePro Dashboard</h2>

    <!-- Cards -->
    <div class="row text-center mb-4">
        <div class="col-md-3">
            <div class="card bg-primary text-white shadow">
                <div class="card-body">
                    <h5>Total Products</h5>
                    <h2 id="totalProducts">@ViewData["TotalProducts"]</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success text-white shadow">
                <div class="card-body">
                    <h5>Total Stock</h5>
                    <h2 id="totalStock">@ViewData["TotalStock"]</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-info text-white shadow">
                <div class="card-body">
                    <h5>Total Value</h5>
                    <h2 id="totalValue">₹@ViewData["TotalValue"]</h2>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-danger text-white shadow">
                <div class="card-body">
                    <h5>Low Stock Alerts</h5>
                    <h2 id="lowStock">@ViewData["LowStock"]</h2>
                </div>
            </div>
        </div>
    </div>

    <!--  Product-wise Stock Line Chart -->
    <div class="card shadow mb-4">
        <div class="card-body">
            <h5 class="mb-3">📊 Stock Levels by Product</h5>
            <canvas id="categoryChart" height="100"></canvas>
        </div>
    </div>
               
            </table>
        </div>
 

<script>
    // Product data array (replace with dynamic data from your controller/ViewData if needed)
    const products = [
        { name: 'Laptop', price: 55000.00, stock: 10 },
        { name: 'Smartphone', price: 22000.50, stock: 25 },
        { name: 'Headphones', price: 1500.75, stock: 50 },
        { name: 'Keyboard', price: 699.00, stock: 30 },
        { name: 'Mouse', price: 499.00, stock: 40 },
        { name: 'Monitor', price: 12000.00, stock: 15 },
        { name: 'Webcam', price: 2500.00, stock: 20 },
        { name: 'Printer', price: 8000.00, stock: 12 },
        { name: 'USB Drive', price: 799.00, stock: 100 },
        { name: 'Router', price: 1999.00, stock: 18 }
    ];

    const ctx = document.getElementById('categoryChart').getContext('2d');

    const lineChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: products.map(p => p.name),
            datasets: [{
                label: 'Stock Quantity',
                data: products.map(p => p.stock),
                borderColor: '#4e73df',
                backgroundColor: 'rgba(78, 115, 223, 0.2)',
                fill: true,
                tension: 0.3,
                pointRadius: 5,
                pointHoverRadius: 7,
                pointBackgroundColor: '#4e73df',
                borderWidth: 3
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'top',
                },
                title: {
                    display: true,
                    text: 'Stock Levels of Products'
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    title: {
                        display: true,
                        text: 'Stock Quantity'
                    }
                },
                x: {
                    title: {
                        display: true,
                        text: 'Products'
                    }
                }
            }
        }
    });

    // SignalR real-time updates
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/dashboardHub")
        .build();

    connection.on("UpdateDashboard", function (data) {
        document.getElementById("totalProducts").textContent = data.totalProducts;
        document.getElementById("totalStock").textContent = data.totalStock;
        document.getElementById("totalValue").textContent = "₹" + data.totalValue;
        document.getElementById("lowStock").textContent = data.lowStock;
    });

    connection.start().catch(function (err) {
        console.error("SignalR error:", err.toString());
    });
</script>
